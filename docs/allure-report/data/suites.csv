"Status","Name","Duration in ms","Description"
"passed","matcher..correspond()","2",""
"passed","plugins module.dirsToSearchPlugins()","2",""
"passed","allure helper..attachVideo()","2",""
"passed","tools.classifySteps()","2",""
"passed","reporter/allure.scope()","2",""
"passed","globals/scope.scopeCb()","4",""
"passed","cluster.launchSlave","3",""
"passed","allure helper..isTestStarted()","7",""
"passed","reporter/stdout..scope()","4",""
"passed","globals/forEachLanguage.langFixture()","2",""
"passed","globals..stubObject()","4",""
"passed","globals.global sinon","2",""
"passed","loader.reload()","2",""
"passed","Steps..startTimer()","1",""
"passed","reporter/base.on hook","2",""
"passed","reporter/base.remove()","2",""
"passed","globals/forEachLanguage.afterCb()","2",""
"passed","TestCase..addDetails()","1",""
"passed","plugins module.getPluginsFromDir()","4",""
"passed","TestCase..start()","1",""
"passed","config.filter","129",""
"passed","Steps..getInstance() returns object which","5",""
"passed","reporter/allure.suiteEnd()","3",""
"passed","reporter/stdout..suiteEnd()","3",""
"passed","reporter/base.passChunkId()","2",""
"passed","tools.mergeSteps()","1",""
"passed","Steps..isTestFailed()","2",""
"passed","error.ConfigError","1",""
"passed","reporter/allure.start()","3",""
"passed","reporter/stdout..fail()","3",""
"passed","reporter/xunit.write()","2",""
"passed","tools.checkTestrailCases()","6",""
"passed","config.plugins","37",""
"passed","globals/test.beforeCb()","1",""
"passed","config.testrail","164",""
"passed","plugins module..register()","2",""
"passed","reporter/base.saveFailedTests()","4",""
"passed","reporter/allure.skip()","3",""
"passed","plugins module..get()","4",""
"passed","TestCase..reset()","2",""
"passed","tools.checkTestrailMissed()","2",""
"passed","utils..setLog()","3",""
"passed","tools..checkTestrail()","2",""
"passed","utils..accountError()","2",""
"passed","globals/forEachLanguage._langCb()","3",""
"passed","config.test","142",""
"passed","run.._run()","3",""
"passed","error.StepError","1",""
"passed","TestCase.instance","1",""
"passed","plugins module..getNames()","2",""
"passed","cluster.killProcs()","2",""
"passed","allure helper..attachText()","3",""
"passed","config.session","202",""
"passed","reporter/base.on suite","4",""
"passed","reporter/allure.scopeEnd()","4",""
"passed","plugins module.findPlugins()","3",""
"passed","config.tools","126",""
"passed","allure helper.proxy instance","5",""
"passed","Steps..checkTimer()","3",""
"passed","loader.sessFunc()","4",""
"passed","config.xunit","53",""
"passed","Steps..stopTimer()","1",""
"passed","tools..printSteps()","4",""
"passed","reporter/allure.reportSkippedTests()","4",""
"passed","reporter/stdout..test()","1",""
"passed","allure helper..hasSteps()","3",""
"passed","reporter/testrail.testEnd()","59",""
"passed","reporter/base..done()","4",""
"passed","run..resetReport()","2",""
"passed","tools..printFixtures()","7",""
"passed","matcher..waitFor()","2050",""
"passed","Steps..listSteps()","1",""
"passed","Steps..resetCtx()","1",""
"passed","tools.filterSteps()","3",""
"passed","classifier..classify()","2",""
"passed","tools.funcDescription()","1",""
"passed","globals/session.session()","4",""
"passed","reporter/xunit.done()","2",""
"passed","reporter/base.on pass","2",""
"passed","tools..listSteps()","4",""
"passed","reporter/base.on suite end","6",""
"passed","reporter/stdout.printStatistics()","4",""
"passed","reporter/base.handleSkipState()","1",""
"passed","globals/test._test()","12",""
"passed","globals.global rewire","1",""
"passed","plugins module..clearCache()","1",""
"passed","tools.checkTestrailOpts()","1",""
"passed","allure helper..attachHtml()","2",""
"passed","reporter/testrail.start()","15",""
"passed","tools..printPlugins()","3",""
"passed","allure helper..pass()","2",""
"passed","tools.checkTestrailDuplicates()","2",""
"passed","reporter/testrail.end()","11",""
"passed","cluster.getTestIds()","2",""
"passed","reporter/stdout..skip()","3",""
"passed","Session 2018-12-11 15:04:37.ScopeType","2",""
"passed","globals/chunk.chunk()","7",""
"passed","TestCase..addPassedChunkdIds()","2",""
"passed","reporter/allure.suite()","3",""
"passed","reporter/xunit.writeTest()","3",""
"passed","globals/scope.scope()","5",""
"passed","TestCase..addError()","1",""
"passed","reporter/stdout.indent()","2",""
"passed","TestCase..end()","2",""
"passed","cluster.endSlave()","3",""
"passed","tools..listFixtures()","2",""
"passed","allure helper..addEnvironment()","2",""
"passed","config.merge user config","20",""
"passed","allure helper..attachJson()","2",""
"passed","TestCase..addChunk()","1",""
"passed","config.chunk","63",""
"passed","config.report","65",""
"passed","reporter/stdout.epilogue()","3",""
"passed","allure helper..feature()","3",""
"passed","config.retry","15",""
"passed","reporter/allure.pass()","3",""
"passed","globals/forEachLanguage.forEachLanguage()","8",""
"passed","reporter/base.register()","3",""
"passed","reporter/base.on fail","3",""
"passed","allure helper..attach()","2",""
"passed","allure helper.instance","4",""
"passed","reporter/testrail.import","105",""
"passed","allure helper..attachImage()","2",""
"passed","globals.sinon-chai","2",""
"passed","cluster.resetArtifactsDir()","4",""
"passed","TestCase..addVideo()","2",""
"passed","tools.learnClassifier()","1",""
"passed","Session 2018-12-11 15:04:37.Glace core lazy import","3",""
"passed","loader.preloads()","4",""
"passed","reporter/allure.test()","1",""
"passed","globals/chunk._chunkCb()","6",""
"passed","reporter/allure.testEnd()","3",""
"passed","allure helper..step()","2",""
"passed","allure helper..story()","2",""
"passed","plugins module.loadPlugins()","4",""
"passed","Steps..register()","2",""
"passed","tools.getStepsData()","1",""
"passed","plugins module..getModules()","2",""
"passed","loader.loadTests()","3",""
"passed","globals/test.isFilterMatched()","2",""
"passed","reporter/stdout..done()","1",""
"passed","reporter/allure.fail()","3",""
"passed","tools.filterFixtures()","2",""
"passed","loader.mainConftests()","3",""
"passed","globals/forEachLanguage.beforeCb()","2",""
"passed","config.allure","53",""
"passed","globals/test.afterCb()","2",""
"passed","reporter/base.on end","4",""
"passed","utils.getDoc()","2",""
"passed","globals/test.test()","3",""
"passed","allure helper..addDescription()","2",""
"passed","cluster..launch()","5",""
"passed","Steps..pause()","105",""
"passed","config.activate plugin configs","19",""
"passed","TestCase..addScreenshot()","1",""
"passed","reporter/allure.end()","6",""
"passed","Steps.setupDebug()","3",""
"passed","reporter/stdout.stdout()","1",""
"passed","reporter/stdout..suite()","2",""
"passed","reporter/base.on pending","2",""
"passed","globals.chai as promised","2",""
"passed","Steps..debug()","3",""
"passed","plugins module..remove()","3",""
"passed","globals/test.initTestFixture()","1",""
"passed","cluster.printArtifactsDir()","1",""
"passed","reporter/base.on test end","2",""
"passed","reporter/stdout.printTestErrors()","2",""
"passed","tools.getFixtures()","1",""
"passed","globals/session.afterCb()","2",""
"passed","reporter/stdout..start()","2",""
"passed","run..run()","13",""
"passed","reporter/xunit.start()","2",""
"passed","tools..printTests()","4",""
"passed","reporter/xunit.end()","2",""
"passed","reporter/base.on test","2",""
"passed","reporter/stdout..testEnd()","1",""
"passed","reporter/allure.allureNotScope()","4",""
"passed","reporter/stdout..end()","2",""
"passed","reporter/base.on hook end","2",""
"passed","reporter/base.on start","2",""
"passed","reporter/stdout.printSkippedTests()","3",""
"passed","reporter/stdout..pass()","2",""
"passed","cluster.calcExitCode()","2",""
"passed","tools.checkTestrailNotImplemented()","3",""
"passed","tools..fakeLoad()","2",""
"passed","TestCase..addPassedChunkId()","1",""
"passed","globals/session.sessCb()","2",""
"passed","reporter/stdout..scopeEnd()","2",""
"passed","tools.getStepNames()","1",""
"passed","reporter/allure.chunk()","1",""
"passed","config.interactive mode changes config","15",""
"passed","reporter/allure.getErrors()","4",""
"passed","reporter.import","3",""
"passed","reporter/stdout.printSessionErrors()","3",""
