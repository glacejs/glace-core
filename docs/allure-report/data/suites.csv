"Status","Name","Duration in ms","Description"
"passed","reporter/stdout.stdout()","1",""
"passed","TestCase..addScreenshot()","1",""
"passed","reporter/allure.allureNotScope()","2",""
"passed","reporter/stdout.printTestErrors()","1",""
"passed","plugins module.loadPlugins()","3",""
"passed","TestCase..addPassedChunkId()","2",""
"passed","loader.mainConftests()","3",""
"passed","tools.getStepNames()","2",""
"passed","tools.classifySteps()","1",""
"passed","globals/test.initTestFixture()","2",""
"passed","reporter/allure.scope()","2",""
"passed","tools.filterFixtures()","2",""
"passed","reporter/allure.testEnd()","1",""
"passed","plugins module.getPluginsFromDir()","3",""
"passed","reporter/base.on hook end","2",""
"passed","globals/scope.scope()","4",""
"passed","loader.preloads()","4",""
"passed","Steps..checkTimer()","6",""
"passed","tools..printPlugins()","3",""
"passed","Steps..getInstance() returns object which","5",""
"passed","reporter/allure.end()","2",""
"passed","tools..printFixtures()","3",""
"passed","Steps..resetCtx()","1",""
"passed","globals/chunk.chunk()","6",""
"passed","globals/forEachLanguage.langFixture()","1",""
"passed","reporter/stdout..scopeEnd()","1",""
"passed","Steps..stopTimer()","1",""
"passed","reporter/testrail.import","76",""
"passed","tools.getDoc()","1",""
"passed","allure helper.proxy instance","6",""
"passed","reporter/allure.suiteEnd()","1",""
"passed","globals..stubObject()","3",""
"passed","tools..listSteps()","3",""
"passed","reporter/base.on test end","1",""
"passed","config.report","69",""
"passed","globals/forEachLanguage.beforeCb()","1",""
"passed","reporter/stdout..fail()","3",""
"passed","allure helper..pass()","2",""
"passed","tools..checkTestrail()","1",""
"passed","globals/test.beforeCb()","2",""
"passed","reporter/stdout.printSessionErrors()","1",""
"passed","config.retry","13",""
"passed","reporter/base.register()","3",""
"passed","tools..fakeLoad()","2",""
"passed","TestCase..reset()","1",""
"passed","tools.checkTestrailOpts()","1",""
"passed","cluster.printArtifactsDir()","1",""
"passed","cluster..launch()","5",""
"passed","Steps..debug()","2",""
"passed","config.allure","52",""
"passed","cluster.killProcs()","2",""
"passed","run.._run()","2",""
"passed","globals/chunk._chunkCb()","5",""
"passed","tools.filterSteps()","2",""
"passed","globals/scope.scopeCb()","2",""
"passed","cluster.getTestIds()","2",""
"passed","TestCase..start()","1",""
"passed","tools.funcDescription()","3",""
"passed","tools..listFixtures()","2",""
"passed","allure helper..attachVideo()","3",""
"passed","allure helper..step()","3",""
"passed","TestCase..addError()","2",""
"passed","reporter/allure.skip()","1",""
"passed","plugins module..remove()","3",""
"passed","reporter/base.on hook","2",""
"passed","Steps..isTestFailed()","2",""
"passed","reporter/base.on test","2",""
"passed","reporter/stdout..suite()","1",""
"passed","allure helper..hasSteps()","4",""
"passed","reporter/testrail.start()","11",""
"passed","globals/forEachLanguage.forEachLanguage()","7",""
"passed","reporter/xunit.end()","2",""
"passed","tools.checkTestrailMissed()","2",""
"passed","allure helper..attachHtml()","1",""
"passed","Steps..startTimer()","1",""
"passed","reporter/base.handleSkipState()","1",""
"passed","config.session","189",""
"passed","reporter/allure.getErrors()","2",""
"passed","reporter/base.on suite","4",""
"passed","config.tools","121",""
"passed","globals/test._test()","10",""
"passed","globals.chai as promised","1",""
"passed","TestCase..addVideo()","1",""
"passed","config.testrail","159",""
"passed","loader.loadTests()","3",""
"passed","globals/session.sessCb()","2",""
"passed","loader.reload()","1",""
"passed","globals.sinon-chai","1",""
"passed","utils..setLog()","2",""
"passed","config.filter","122",""
"passed","reporter/allure.reportSkippedTests()","2",""
"passed","allure helper..attachJson()","13",""
"passed","config.chunk","63",""
"passed","reporter/stdout..start()","2",""
"passed","reporter/xunit.writeTest()","3",""
"passed","reporter/stdout.printSkippedTests()","3",""
"passed","TestCase..end()","1",""
"passed","tools.checkTestrailDuplicates()","2",""
"passed","reporter/xunit.write()","1",""
"passed","reporter/stdout..testEnd()","1",""
"passed","allure helper..attachText()","1",""
"passed","tools..printTests()","3",""
"passed","allure helper..attachImage()","6",""
"passed","reporter/testrail.end()","9",""
"passed","allure helper..addDescription()","3",""
"passed","loader.sessFunc()","4",""
"passed","reporter/xunit.start()","2",""
"passed","plugins module..get()","4",""
"passed","Session 2018-12-4 07:26:53.Glace core lazy import","3",""
"passed","globals/forEachLanguage._langCb()","2",""
"passed","reporter/base.saveFailedTests()","4",""
"passed","matcher..waitFor()","2057",""
"passed","plugins module..getModules()","2",""
"passed","Steps..listSteps()","1",""
"passed","reporter/stdout..suiteEnd()","1",""
"passed","cluster.launchSlave","5",""
"passed","globals/forEachLanguage.afterCb()","2",""
"passed","globals/test.isFilterMatched()","3",""
"passed","reporter/stdout..pass()","1",""
"passed","reporter/allure.suite()","2",""
"passed","cluster.endSlave()","15",""
"passed","Session 2018-12-4 07:26:53.ScopeType","1",""
"passed","reporter/base.passChunkId()","2",""
"passed","Steps.setupDebug()","2",""
"passed","reporter/base.on pending","2",""
"passed","reporter/allure.scopeEnd()","2",""
"passed","tools.getFixtures()","2",""
"passed","plugins module..clearCache()","1",""
"passed","allure helper..isTestStarted()","5",""
"passed","plugins module.findPlugins()","3",""
"passed","tools.learnClassifier()","1",""
"passed","tools..printSteps()","3",""
"passed","TestCase.instance","2",""
"passed","tools.checkTestrailNotImplemented()","2",""
"passed","config.merge user config","15",""
"passed","plugins module.dirsToSearchPlugins()","2",""
"passed","reporter/stdout..test()","1",""
"passed","reporter/stdout..done()","1",""
"passed","globals.global sinon","0",""
"passed","reporter/stdout..end()","2",""
"passed","globals/session.session()","4",""
"passed","reporter.import","3",""
"passed","reporter/stdout..skip()","1",""
"passed","reporter/allure.chunk()","1",""
"passed","reporter/base.on pass","2",""
"passed","plugins module..getNames()","3",""
"passed","utils..accountError()","2",""
"passed","reporter/base.on suite end","5",""
"passed","Steps..pause()","106",""
"passed","reporter/base..done()","3",""
"passed","reporter/allure.start()","1",""
"passed","reporter/stdout.epilogue()","3",""
"passed","plugins module..register()","3",""
"passed","reporter/base.on start","1",""
"passed","allure helper..addEnvironment()","2",""
"passed","reporter/allure.pass()","1",""
"passed","config.test","132",""
"passed","globals/test.afterCb()","1",""
"passed","tools.mergeSteps()","1",""
"passed","reporter/allure.test()","1",""
"passed","error.ConfigError","1",""
"passed","config.interactive mode changes config","51",""
"passed","reporter/testrail.testEnd()","53",""
"passed","matcher..correspond()","2",""
"passed","globals/test.test()","2",""
"passed","config.xunit","51",""
"passed","TestCase..addDetails()","1",""
"passed","error.StepError","1",""
"passed","TestCase..addPassedChunkdIds()","1",""
"passed","allure helper..story()","3",""
"passed","tools.checkTestrailCases()","6",""
"passed","config.plugins","35",""
"passed","cluster.calcExitCode()","2",""
"passed","reporter/base.on fail","2",""
"passed","reporter/allure.fail()","1",""
"passed","run..resetReport()","2",""
"passed","reporter/xunit.done()","1",""
"passed","classifier..classify()","2",""
"passed","globals.global rewire","0",""
"passed","allure helper.instance","5",""
"passed","tools.getStepsData()","2",""
"passed","TestCase..addChunk()","1",""
"passed","reporter/stdout..scope()","1",""
"passed","globals/session.afterCb()","2",""
"passed","Steps..register()","1",""
"passed","allure helper..attach()","3",""
"passed","run..run()","11",""
"passed","reporter/stdout.indent()","2",""
"passed","config.activate plugin configs","17",""
"passed","allure helper..feature()","2",""
"passed","reporter/base.on end","3",""
"passed","reporter/stdout.printStatistics()","2",""
"passed","reporter/base.remove()","1",""
"passed","cluster.resetArtifactsDir()","3",""
