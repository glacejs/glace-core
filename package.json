{
  "name": "glace-core",
  "version": "1.9.5",
  "description": "GlaceJS minimal functional testing framework",
  "main": "lib/index.js",
  "scripts": {
    "ci": "npm test",
    "release": "VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && git add -u && git commit -m \"release $VERSION\" && git tag $VERSION && git push origin $VERSION && npm run docs:publish && npm publish",
    "test": "npm run lint && npm run test:unit && npm run test:e2e",
    "test:unit": "nyc ./bin/glace tests/unit --dont-check-names",
    "test:e2e": "node ./bin/glace tests/e2e",
    "test:cover": "nyc --reporter=lcov --report-dir ./docs/tests-cover ./bin/glace tests/unit --dont-check-names --allure",
    "test:basic": "node ./bin/glace tests/samples/testBasic.js --languages \"en, ru\"",
    "test:retry": "node ./bin/glace tests/samples/testRetry.js --retry 2",
    "test:chunk-retry": "node ./bin/glace tests/samples/testRetry.js --chunk-retry 2",
    "test:own-app": "node ./tests/samples/ownApp tests/samples/testBasic.js",
    "test:suppress-uncaught": "node ./bin/glace tests/samples/testUncaughtExceptions.js",
    "test:fail-uncaught": "node ./bin/glace tests/samples/testUncaughtExceptions.js --uncaught fail",
    "test:mocha-uncaught": "node ./bin/glace tests/samples/testUncaughtExceptions.js --uncaught mocha",
    "test:timer-steps": "node ./bin/glace tests/samples/testTimerSteps.js",
    "test:custom-reporter": "node ./bin/glace tests/samples/testCustomReporter.js",
    "test:retry-only-params": "node ./bin/glace tests/samples/testRetryOnlyParams.js --retry 3",
    "test:retry-with-include": "node ./bin/glace tests/samples/testRetryWithInclude.js --include tests/samples/include.json --retry 1",
    "test:include": "node ./bin/glace tests/samples/testInclude.js --include \"test 1 | test 2\"",
    "test:exclude": "node ./bin/glace tests/samples/testExclude.js --exclude \"test 1 | test 2\"",
    "test:samples": "npm run test:basic; npm run test:retry; npm run test:chunk-retry; npm run test:own-app; npm run test:suppress-uncaught; npm run test:fail-uncaught; npm run test:mocha-uncaught; npm run test:timer-steps; npm run test:custom-reporter; npm run test:retry-only-params; npm run test:retry-with-include; npm run test:include; npm run test:exclude",
    "allure:report": "npm run test:cover && allure generate report/allure --report-dir ./docs/allure-report",
    "docs": "rm -rf docs && jsdoc -c jsdoc.json -d docs && npm run allure:report",
    "docs:publish": "npm run docs && git add docs && git commit -m \"update docs\" && git push origin master",
    "lint": "eslint lib tests",
    "lint:fix": "npm run lint -- --fix"
  },
  "nyc": {
    "exclude": [
      "lib/hacking.js",
      "tests"
    ],
    "check-coverage": true,
    "branches": 94,
    "functions": 96,
    "lines": 99,
    "statements": 99
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/glacejs/glace-core.git"
  },
  "author": "Sergei Chipiga <chipiga86@gmail.com>",
  "license": "MIT",
  "bin": {
    "glace": "./bin/glace"
  },
  "bugs": {
    "url": "https://github.com/glacejs/glace-core/issues"
  },
  "homepage": "https://glacejs.github.io/glace-core",
  "dependencies": {
    "allure-js-commons": "1.3.2",
    "bayes": "0.0.7",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "chai-datetime": "1.5.0",
    "chai-fs": "2.0.0",
    "chai-string": "1.5.0",
    "cli-highlight": "2.0.0",
    "colors": "1.3.2",
    "cross-spawn": "6.0.5",
    "fs-extra": "7.0.1",
    "glace-utils": "1.3.3",
    "is-promise": "2.1.0",
    "lodash": "4.17.11",
    "mocha": "5.2.0",
    "pretty-ms": "4.0.0",
    "rewire": "4.0.1",
    "sinon": "7.1.1",
    "sinon-chai": "3.2.0",
    "temp": "0.8.3",
    "testrail-api": "1.3.5"
  },
  "devDependencies": {
    "eslint": "^5.9.0",
    "ink-docstrap": "^1.3.0",
    "jsdoc": "^3.5.5",
    "jsdoc-strip-async-await": "^0.1.0",
    "nyc": "^13.1.0",
    "pre-commit": "^1.2.2"
  },
  "engines": {
    "node": ">=8.9",
    "npm": ">=5.5"
  },
  "files": [
    "bin",
    "lib"
  ]
}
